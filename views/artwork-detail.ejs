<!DOCTYPE html>
<html lang="en">
<head>
  <title>Kala-Kriti | <%= artwork.title %></title>
  <%- include('partials/base-head') %>
</head>
<body class="bg-gray-50">
  <!-- Set the active page for the header -->
  <% locals.page = 'buy' %>
  
  <!-- Header -->
  <%- include('partials/header') %>
  
  <!-- Artwork Detail Section -->
  <section class="py-12">
    <div class="container mx-auto px-4">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Left: Artwork Image -->
        <div class="w-full lg:w-1/2">
          <div class="bg-white rounded-lg overflow-hidden shadow-sm">
            <img src="<%= artwork.imageUrl %>" alt="<%= artwork.title %>" class="w-full object-contain">
          </div>
        </div>
        
        <!-- Right: Artwork Details -->
        <div class="w-full lg:w-1/2">
          <div class="bg-white rounded-lg p-6 shadow-sm">
            <h1 class="text-3xl font-semibold mb-2"><%= artwork.title %></h1>
            <h2 class="text-xl text-gray-600 mb-4">By <%= artwork.artist %></h2>
            
            <div class="border-t border-b border-gray-100 py-4 my-4">
              <p class="text-2xl font-bold mb-4">$<%= artwork.price.toLocaleString() %></p>
              
              <div class="flex space-x-3 mb-6">
                <button id="add-to-cart-btn" class="px-6 py-3 bg-black text-white font-medium rounded-md hover:bg-gray-800 transition-colors duration-200 flex items-center" onclick="addToCart('<%= artwork._id %>')">
                  <i class="fas fa-shopping-cart mr-2"></i> Add to Cart
                </button>
                <button id="add-to-wishlist-btn" class="px-6 py-3 border border-gray-300 text-gray-700 font-medium rounded-md hover:bg-gray-100 transition-colors duration-200 flex items-center" onclick="toggleWishlist('<%= artwork._id %>')">
                  <i class="far fa-heart mr-2"></i> Add to Wishlist
                </button>
              </div>
            </div>
            
            <div class="mb-6">
              <h3 class="text-lg font-medium mb-2">Description</h3>
              <p class="text-gray-600"><%= artwork.description %></p>
            </div>
            
            <div class="grid grid-cols-2 gap-4 mb-6">
              <div>
                <h3 class="text-sm font-medium text-gray-500">Category</h3>
                <p><%= artwork.category %></p>
              </div>
              <div>
                <h3 class="text-sm font-medium text-gray-500">Dimensions</h3>
                <p><%= artwork.dimensions %></p>
              </div>
              <div>
                <h3 class="text-sm font-medium text-gray-500">Location</h3>
                <p><%= artwork.location %></p>
              </div>
              <div>
                <h3 class="text-sm font-medium text-gray-500">Date Added</h3>
                <p><%= new Date(artwork.createdAt).toLocaleDateString() %></p>
              </div>
            </div>
            
            <div class="border-t border-gray-100 pt-4">
              <h3 class="text-lg font-medium mb-3">Share This Artwork</h3>
              <div class="flex space-x-4">
                <a href="#" class="text-gray-500 hover:text-gray-800">
                  <i class="fab fa-facebook-f text-xl"></i>
                </a>
                <a href="#" class="text-gray-500 hover:text-gray-800">
                  <i class="fab fa-twitter text-xl"></i>
                </a>
                <a href="#" class="text-gray-500 hover:text-gray-800">
                  <i class="fab fa-pinterest text-xl"></i>
                </a>
                <a href="#" class="text-gray-500 hover:text-gray-800">
                  <i class="fab fa-instagram text-xl"></i>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Related Artworks Section -->
  <section class="py-12 bg-white">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl font-semibold mb-8 text-center">You May Also Like</h2>
      
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <% if (locals.relatedArtworks && relatedArtworks.length > 0) { %>
          <% relatedArtworks.forEach(art => { %>
            <div class="bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-300 group">
              <a href="/artworks/<%= art._id %>" class="block">
                <div class="relative">
                  <img src="<%= art.imageUrl %>" alt="<%= art.title %>" class="w-full h-48 object-cover">
                  <div class="absolute inset-0 bg-black bg-opacity-20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end justify-end p-4">
                    <div class="flex space-x-2" onclick="event.preventDefault(); event.stopPropagation();">
                      <button class="bg-white p-2 rounded-full text-gray-800 hover:text-black transition-colors" onclick="toggleRelatedWishlist('<%= art._id %>', this)">
                        <i class="fa-regular fa-heart"></i>
                      </button>
                      <button class="bg-white p-2 rounded-full text-gray-800 hover:text-black transition-colors" onclick="addRelatedToCart('<%= art._id %>', this)">
                        <i class="fa-solid fa-cart-plus"></i>
                      </button>
                      <a href="/artworks/<%= art._id %>" class="bg-white p-2 rounded-full text-gray-800 hover:text-black transition-colors">
                        <i class="fa-solid fa-eye"></i>
                      </a>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="font-medium text-gray-900"><%= art.title %></h3>
                  <p class="text-sm text-gray-600 mb-1">By <%= art.artist %></p>
                  <p class="font-medium">$<%= art.price.toLocaleString() %></p>
                </div>
              </a>
            </div>
          <% }); %>
        <% } else { %>
          <div class="col-span-full text-center py-6">
            <p class="text-gray-500">No related artworks found.</p>
          </div>
        <% } %>
      </div>
    </div>
  </section>
  
  <!-- Footer -->
  <%- include('partials/footer') %>
  
  <!-- Common Scripts -->
  <%- include('partials/base-scripts') %>
  
  <!-- Artwork Detail Page Specific Scripts -->
  <script>
    function updateCartCount() {
      const cartCountElement = document.getElementById('cart-count');
      if (cartCountElement) {
        // Get cart data from localStorage
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        const count = cart.length;
        cartCountElement.textContent = count;
        
        // Hide badge if count is 0
        if (count === 0) {
          cartCountElement.style.display = 'none';
        } else {
          cartCountElement.style.display = 'flex';
        }
      }
    }

    function addToCart(artId) {
      // Get the artwork details from the page
      const title = document.querySelector('h1').textContent;
      const artist = document.querySelector('h2').textContent.replace('By ', '');
      const priceText = document.querySelector('.text-2xl').textContent.replace('$', '');
      const price = parseFloat(priceText.replace(/,/g, ''));
      const image = document.querySelector('.lg\\:w-1\\/2 img').src;
      
      // Update button appearance to show loading
      const addToCartBtn = document.getElementById('add-to-cart-btn');
      const originalButtonContent = addToCartBtn.innerHTML;
      addToCartBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Adding...';
      addToCartBtn.disabled = true;
      
      // Get existing cart from localStorage or create new one
      let cart = JSON.parse(localStorage.getItem('cart')) || [];
      
      // Check if item already exists in cart
      const index = cart.findIndex(item => item.id === artId);
      
      if (index >= 0) {
        // Update quantity if item exists
        cart[index].quantity += 1;
      } else {
        // Add new item
        cart.push({
          id: artId,
          title: title,
          artist: artist,
          price: price,
          image: image,
          quantity: 1
        });
      }
      
      // Save updated cart to localStorage
      localStorage.setItem('cart', JSON.stringify(cart));
      
      // Update cart count in header
      if (window.updateCartCount) {
        window.updateCartCount();
      }
      
      // Update button appearance
      addToCartBtn.classList.add('bg-green-600');
      addToCartBtn.innerHTML = '<i class="fas fa-check mr-2"></i> Added to Cart';
      
      setTimeout(() => {
        addToCartBtn.classList.remove('bg-green-600');
        addToCartBtn.innerHTML = '<i class="fas fa-shopping-cart mr-2"></i> Add to Cart';
        addToCartBtn.disabled = false;
      }, 2000);
      
      showNotification(`${title} has been added to your cart`, 'success');
    }

    function toggleWishlist(artId) {
      // Get the artwork details from the page
      const title = document.querySelector('h1').textContent;
      const artist = document.querySelector('h2').textContent.replace('By ', '');
      const priceText = document.querySelector('.text-2xl').textContent.replace('$', '');
      const price = parseFloat(priceText.replace(/,/g, ''));
      const image = document.querySelector('.lg\\:w-1\\/2 img').src;
      
      // Get existing wishlist or create new one
      let wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
      
      // Check if item already exists in wishlist
      const index = wishlist.findIndex(item => item.id === artId);
      const wishlistBtn = document.getElementById('add-to-wishlist-btn');
      
      if (index >= 0) {
        wishlist.splice(index, 1);
        wishlistBtn.innerHTML = '<i class="far fa-heart mr-2"></i> Add to Wishlist';
        showNotification(`${title} has been removed from your wishlist`, 'info');
      } else {
        wishlist.push({
          id: artId,
          title: title,
          artist: artist,
          price: price,
          image: image
        });
        wishlistBtn.innerHTML = '<i class="fas fa-heart mr-2"></i> Remove from Wishlist';
        showNotification(`${title} has been added to your wishlist`, 'success');
      }
      
      localStorage.setItem('wishlist', JSON.stringify(wishlist));
    }
    
    // Show notification for user feedback
    function showNotification(message, type = 'info') {
      // Create notification element
      const notification = document.createElement('div');
      
      // Set classes based on type
      let bgColor = 'bg-gray-800';
      if (type === 'error') bgColor = 'bg-red-600';
      if (type === 'success') bgColor = 'bg-green-600';
      if (type === 'info') bgColor = 'bg-blue-600';
      
      notification.className = `fixed bottom-4 right-4 ${bgColor} text-white py-2 px-4 rounded-md shadow-lg transform translate-y-full opacity-0 transition-all duration-300 z-50`;
      notification.textContent = message;
      document.body.appendChild(notification);
      
      // Show notification
      setTimeout(() => {
        notification.style.transform = 'translate(0)';
        notification.style.opacity = '1';
      }, 100);
      
      // Hide notification after 3 seconds
      setTimeout(() => {
        notification.style.transform = 'translateY(10px)';
        notification.style.opacity = '0';
        
        // Remove from DOM after animation completes
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 3000);
    }
    
    // Check if artwork is in wishlist and cart on page load
    document.addEventListener('DOMContentLoaded', function() {
      const artId = '<%= artwork._id %>';
      const wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      
      // Check wishlist state
      if (wishlist.some(item => item.id === artId)) {
        document.getElementById('add-to-wishlist-btn').innerHTML = '<i class="fas fa-heart mr-2"></i> Remove from Wishlist';
      }
      
      // Check if already in cart and disable button if true
      if (cart.some(item => item.id === artId)) {
        const addToCartBtn = document.getElementById('add-to-cart-btn');
        addToCartBtn.innerHTML = '<i class="fas fa-check mr-2"></i> In Your Cart';
        addToCartBtn.classList.add('bg-green-600');
        addToCartBtn.disabled = true;
      }
      
      // Update cart count
      if (window.updateCartCount) {
        window.updateCartCount();
      }
      
      // Update related items wishlist/cart status
      updateRelatedItemsStatus();
    });
    
    // Update the status of related artworks
    function updateRelatedItemsStatus() {
      const wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      
      // Update wishlist buttons
      const relatedWishlistBtns = document.querySelectorAll('.bg-white p-2 i.fa-heart').closest('button');
      relatedWishlistBtns.forEach(btn => {
        const artId = btn.getAttribute('onclick').match(/'([^']+)'/)[1];
        if (wishlist.some(item => item.id === artId)) {
          btn.innerHTML = '<i class="fas fa-heart"></i>';
        }
      });
      
      // Update cart buttons
      const relatedCartBtns = document.querySelectorAll('.bg-white p-2 i.fa-cart-plus').closest('button');
      relatedCartBtns.forEach(btn => {
        const artId = btn.getAttribute('onclick').match(/'([^']+)'/)[1];
        if (cart.some(item => item.id === artId)) {
          btn.innerHTML = '<i class="fas fa-check"></i>';
        }
      });
    }
    
    // Handle wishlist toggling for related artworks
    function toggleRelatedWishlist(artId, buttonElement) {
      try {
        // Get the artwork details from the DOM
        const artworkElement = buttonElement.closest('.group');
        const title = artworkElement.querySelector('h3').textContent;
        const artist = artworkElement.querySelector('.text-sm.text-gray-600').textContent.replace('By ', '');
        const priceText = artworkElement.querySelector('.font-medium').textContent.replace('$', '');
        const price = parseFloat(priceText.replace(/,/g, ''));
        const image = artworkElement.querySelector('img').src;
        
        // Get existing wishlist or create new one
        let wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
        
        // Check if item already exists in wishlist
        const index = wishlist.findIndex(item => item.id === artId);
        
        if (index >= 0) {
          wishlist.splice(index, 1);
          buttonElement.innerHTML = '<i class="fa-regular fa-heart"></i>';
          showNotification(`${title} has been removed from your wishlist`, 'info');
        } else {
          wishlist.push({
            id: artId,
            title: title,
            artist: artist,
            price: price,
            image: image
          });
          buttonElement.innerHTML = '<i class="fas fa-heart"></i>';
          showNotification(`${title} has been added to your wishlist`, 'success');
        }
        
        localStorage.setItem('wishlist', JSON.stringify(wishlist));
        
        // Prevent the card from redirecting
        event.preventDefault();
        event.stopPropagation();
        return false;
      } catch (error) {
        console.error('Error updating wishlist:', error);
        showNotification('Error updating wishlist', 'error');
        return false;
      }
    }
    
    // Handle cart adding for related artworks
    function addRelatedToCart(artId, buttonElement) {
      try {
        // Get the artwork details from the DOM
        const artworkElement = buttonElement.closest('.group');
        const title = artworkElement.querySelector('h3').textContent;
        const artist = artworkElement.querySelector('.text-sm.text-gray-600').textContent.replace('By ', '');
        const priceText = artworkElement.querySelector('.font-medium').textContent.replace('$', '');
        const price = parseFloat(priceText.replace(/,/g, ''));
        const image = artworkElement.querySelector('img').src;
        
        // Update button to show loading
        const originalButtonContent = buttonElement.innerHTML;
        buttonElement.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
        buttonElement.disabled = true;
        
        // Get existing cart from localStorage or create new one
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        
        // Check if item already exists in cart
        const index = cart.findIndex(item => item.id === artId);
        
        if (index >= 0) {
          // Update quantity if item exists
          cart[index].quantity += 1;
        } else {
          // Add new item
          cart.push({
            id: artId,
            title: title,
            artist: artist,
            price: price,
            image: image,
            quantity: 1
          });
        }
        
        // Save updated cart to localStorage
        localStorage.setItem('cart', JSON.stringify(cart));
        
        // Update button appearance
        buttonElement.innerHTML = '<i class="fas fa-check"></i>';
        
        // Show notification
        showNotification(`${title} has been added to your cart`, 'success');
        
        // Update cart count in header
        if (window.updateCartCount) {
          window.updateCartCount();
        }
        
        // After a delay, reset the button
        setTimeout(() => {
          buttonElement.innerHTML = originalButtonContent;
          buttonElement.disabled = false;
        }, 2000);
        
        // Prevent the card from redirecting
        event.preventDefault();
        event.stopPropagation();
      } catch (error) {
        console.error('Error adding related item to cart:', error);
        showNotification('Failed to add item to cart', 'error');
        
        // If possible, reset the button
        if (buttonElement) {
          buttonElement.innerHTML = '<i class="fa-solid fa-cart-plus"></i>';
          buttonElement.disabled = false;
        }
      }
    }
  </script>
</body>
</html> 